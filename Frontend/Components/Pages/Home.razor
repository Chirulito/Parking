@page "/"
@rendermode InteractiveServer

@inject HttpClient Http

<input placeholder="Usuario" @bind="username" />
<input type="password" placeholder="Contraseña" @bind="password" />

<button @onclick="Login" type="button">Entrar</button>

@if (!string.IsNullOrEmpty(display))
{
    <p>@((MarkupString)display)</p>
}

@code {
    string username, password;
    string display;

    async Task Login()
    {
        display = null;

        var apiUrl = "https://localhost:7141/api/auth/login";

        var res = await Http.PostAsJsonAsync(apiUrl, new { Username = username, Password = password });

        if (res.IsSuccessStatusCode)
        {
            var data = await res.Content.ReadFromJsonAsync<LoginResponse>();

            if (data != null)
            {
                var rolesText = data.roles != null && data.roles.Any()
                    ? string.Join(", ", data.roles)
                    : "(ninguno)";

                display = $"Usuario: {username}<br/>Roles: {rolesText}";
            }
            else
            {
                display = "Error: respuesta inválida del servidor.";
            }
        }
        else
        {
            var errorMsg = await res.Content.ReadAsStringAsync();
            display = $"Error en login: {(int)res.StatusCode} - {res.ReasonPhrase}<br/>{errorMsg}";
        }
    }

    class LoginResponse
    {
        public string token { get; set; }
        public List<string> roles { get; set; }
    }
}

